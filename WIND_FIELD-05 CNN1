{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10189378,"sourceType":"datasetVersion","datasetId":6295251}],"dockerImageVersionId":30804,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:48:40.777351Z","iopub.execute_input":"2024-12-18T14:48:40.777884Z","iopub.status.idle":"2024-12-18T14:48:41.975461Z","shell.execute_reply.started":"2024-12-18T14:48:40.777835Z","shell.execute_reply":"2024-12-18T14:48:41.974154Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/wind-field-related-data/ERA5_merged_6hrly_daily_2019-23.nc\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"## 1. Import Libraries","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport xarray as xr\nimport seaborn as sns\nimport matplotlib.pyplot as plt","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:48:41.977842Z","iopub.execute_input":"2024-12-18T14:48:41.978493Z","iopub.status.idle":"2024-12-18T14:48:43.869779Z","shell.execute_reply.started":"2024-12-18T14:48:41.978424Z","shell.execute_reply":"2024-12-18T14:48:43.868691Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import r2_score","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T15:50:50.532044Z","iopub.execute_input":"2024-12-18T15:50:50.532472Z","iopub.status.idle":"2024-12-18T15:50:50.537580Z","shell.execute_reply.started":"2024-12-18T15:50:50.532434Z","shell.execute_reply":"2024-12-18T15:50:50.536457Z"}},"outputs":[],"execution_count":30},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, ReLU, Softmax","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:48:44.075690Z","iopub.execute_input":"2024-12-18T14:48:44.076086Z","iopub.status.idle":"2024-12-18T14:48:57.075715Z","shell.execute_reply.started":"2024-12-18T14:48:44.076053Z","shell.execute_reply":"2024-12-18T14:48:57.074565Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"## 2. Load and Preprocess Data","metadata":{}},{"cell_type":"code","source":"file_path = '/kaggle/input/wind-field-related-data/ERA5_merged_6hrly_daily_2019-23.nc'","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:48:57.076945Z","iopub.execute_input":"2024-12-18T14:48:57.077609Z","iopub.status.idle":"2024-12-18T14:48:57.081965Z","shell.execute_reply.started":"2024-12-18T14:48:57.077573Z","shell.execute_reply":"2024-12-18T14:48:57.080925Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"df = xr.open_dataset(file_path)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:48:57.083475Z","iopub.execute_input":"2024-12-18T14:48:57.083934Z","iopub.status.idle":"2024-12-18T14:48:57.534515Z","shell.execute_reply.started":"2024-12-18T14:48:57.083879Z","shell.execute_reply":"2024-12-18T14:48:57.533349Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"print(df)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:48:57.535825Z","iopub.execute_input":"2024-12-18T14:48:57.536456Z","iopub.status.idle":"2024-12-18T14:48:57.680171Z","shell.execute_reply.started":"2024-12-18T14:48:57.536417Z","shell.execute_reply":"2024-12-18T14:48:57.678932Z"}},"outputs":[{"name":"stdout","text":"<xarray.Dataset> Size: 3GB\nDimensions:         (valid_time: 7304, latitude: 121, longitude: 81)\nCoordinates:\n    expver          (valid_time) object 58kB ...\n  * valid_time      (valid_time) datetime64[ns] 58kB 2019-01-01 ... 2023-12-3...\n  * latitude        (latitude) float64 968B 30.0 29.75 29.5 ... 0.5 0.25 0.0\n  * longitude       (longitude) float64 648B 80.0 80.25 80.5 ... 99.75 100.0\n    number          int32 4B ...\nData variables:\n    u10             (valid_time, latitude, longitude) float32 286MB ...\n    v10             (valid_time, latitude, longitude) float32 286MB ...\n    blh             (valid_time, latitude, longitude) float32 286MB ...\n    cape            (valid_time, latitude, longitude) float32 286MB ...\n    d2m             (valid_time, latitude, longitude) float32 286MB ...\n    fsr             (valid_time, latitude, longitude) float32 286MB ...\n    geo             (valid_time, latitude, longitude) float32 286MB ...\n    msl             (valid_time, latitude, longitude) float32 286MB ...\n    t2m             (valid_time, latitude, longitude) float32 286MB ...\n    wind_magnitude  (valid_time, latitude, longitude) float32 286MB ...\n    RH              (valid_time, latitude, longitude) float32 286MB ...\n    spg             (valid_time, latitude, longitude) float32 286MB ...\nAttributes:\n    GRIB_centre:             ecmf\n    GRIB_centreDescription:  European Centre for Medium-Range Weather Forecasts\n    GRIB_subCentre:          0\n    Conventions:             CF-1.7\n    institution:             European Centre for Medium-Range Weather Forecasts\n    history:                 2024-12-12T10:19 GRIB to CDM+CF via cfgrib-0.9.1...\n","output_type":"stream"}],"execution_count":7},{"cell_type":"code","source":"# Define the parameters (channels) to use for prediction\nchannels = ['spg', 'geo', 'blh', 'fsr']  # Example of 4 input channels","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:48:57.681502Z","iopub.execute_input":"2024-12-18T14:48:57.682146Z","iopub.status.idle":"2024-12-18T14:48:57.686546Z","shell.execute_reply.started":"2024-12-18T14:48:57.682110Z","shell.execute_reply":"2024-12-18T14:48:57.685536Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"# Extract features and target\nX = np.stack([df[var].values for var in channels], axis=-1)  # Shape: (time, lat, lon, channels)\ny = df['wind_magnitude'].values  # Target variable","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:48:57.688017Z","iopub.execute_input":"2024-12-18T14:48:57.688470Z","iopub.status.idle":"2024-12-18T14:49:15.283422Z","shell.execute_reply.started":"2024-12-18T14:48:57.688425Z","shell.execute_reply":"2024-12-18T14:49:15.282442Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"# Verify shapes\nprint(\"Shape of X (input features):\", X.shape)\nprint(\"Shape of y (target wind magnitude):\", y.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:15.287946Z","iopub.execute_input":"2024-12-18T14:49:15.288280Z","iopub.status.idle":"2024-12-18T14:49:15.293584Z","shell.execute_reply.started":"2024-12-18T14:49:15.288250Z","shell.execute_reply":"2024-12-18T14:49:15.292471Z"}},"outputs":[{"name":"stdout","text":"Shape of X (input features): (7304, 121, 81, 4)\nShape of y (target wind magnitude): (7304, 121, 81)\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"# Take spatial mean across lat and lon for each time step\ny = np.max(y, axis=(1, 2))  # Shape: (time,)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:15.294998Z","iopub.execute_input":"2024-12-18T14:49:15.295456Z","iopub.status.idle":"2024-12-18T14:49:15.336348Z","shell.execute_reply.started":"2024-12-18T14:49:15.295409Z","shell.execute_reply":"2024-12-18T14:49:15.335229Z"}},"outputs":[],"execution_count":11},{"cell_type":"code","source":"# Verify dimensions\nprint(\"Shape of X (input features):\", X.shape)  # (time, lat, lon, channels)\nprint(\"Shape of y (target wind magnitude):\", y.shape)  # (time,)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:15.337661Z","iopub.execute_input":"2024-12-18T14:49:15.338083Z","iopub.status.idle":"2024-12-18T14:49:15.344018Z","shell.execute_reply.started":"2024-12-18T14:49:15.338037Z","shell.execute_reply":"2024-12-18T14:49:15.342850Z"}},"outputs":[{"name":"stdout","text":"Shape of X (input features): (7304, 121, 81, 4)\nShape of y (target wind magnitude): (7304,)\n","output_type":"stream"}],"execution_count":12},{"cell_type":"code","source":"# Reshape X to maintain 4D shape for CNN input\nX = X.reshape(X.shape[0], X.shape[1], X.shape[2], len(channels))\n\n# Verify again\nprint(\"Shape of X after reshaping:\", X.shape)\nprint(\"Shape of y:\", y.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:15.345480Z","iopub.execute_input":"2024-12-18T14:49:15.345966Z","iopub.status.idle":"2024-12-18T14:49:15.360290Z","shell.execute_reply.started":"2024-12-18T14:49:15.345919Z","shell.execute_reply":"2024-12-18T14:49:15.359058Z"}},"outputs":[{"name":"stdout","text":"Shape of X after reshaping: (7304, 121, 81, 4)\nShape of y: (7304,)\n","output_type":"stream"}],"execution_count":13},{"cell_type":"markdown","source":"## 3. Normalize the Data","metadata":{}},{"cell_type":"code","source":"# Normalize X\nscaler_X = StandardScaler()\nX_normalized = scaler_X.fit_transform(X.reshape(-1, X.shape[-1])).reshape(X.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:15.361856Z","iopub.execute_input":"2024-12-18T14:49:15.362200Z","iopub.status.idle":"2024-12-18T14:49:28.244963Z","shell.execute_reply.started":"2024-12-18T14:49:15.362169Z","shell.execute_reply":"2024-12-18T14:49:28.244033Z"}},"outputs":[],"execution_count":14},{"cell_type":"code","source":"# Normalize y\nscaler_y = StandardScaler()\ny_normalized = scaler_y.fit_transform(y.reshape(-1, 1)).reshape(-1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:28.246220Z","iopub.execute_input":"2024-12-18T14:49:28.246662Z","iopub.status.idle":"2024-12-18T14:49:28.253697Z","shell.execute_reply.started":"2024-12-18T14:49:28.246619Z","shell.execute_reply":"2024-12-18T14:49:28.252650Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"# Split into train and test sets\nX_train, X_test, y_train, y_test = train_test_split(\n    X_normalized, y_normalized, test_size=0.2, shuffle=False\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:28.254856Z","iopub.execute_input":"2024-12-18T14:49:28.255133Z","iopub.status.idle":"2024-12-18T14:49:28.604345Z","shell.execute_reply.started":"2024-12-18T14:49:28.255106Z","shell.execute_reply":"2024-12-18T14:49:28.603422Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"\nprint(\"Training and testing shapes:\")\nprint(\"X_train:\", X_train.shape, \"y_train:\", y_train.shape)\nprint(\"X_test:\", X_test.shape, \"y_test:\", y_test.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:28.605920Z","iopub.execute_input":"2024-12-18T14:49:28.606233Z","iopub.status.idle":"2024-12-18T14:49:28.611986Z","shell.execute_reply.started":"2024-12-18T14:49:28.606201Z","shell.execute_reply":"2024-12-18T14:49:28.610925Z"}},"outputs":[{"name":"stdout","text":"Training and testing shapes:\nX_train: (5843, 121, 81, 4) y_train: (5843,)\nX_test: (1461, 121, 81, 4) y_test: (1461,)\n","output_type":"stream"}],"execution_count":17},{"cell_type":"markdown","source":"## 4. Define the CNN Model","metadata":{}},{"cell_type":"code","source":"# Build CNN Model for Regression\nmodel = tf.keras.Sequential([\n    # Convolutional and Pooling Layers\n    tf.keras.layers.Conv2D(64, (3, 3), activation='relu', input_shape=(X_train.shape[1], X_train.shape[2], X_train.shape[3])),\n    tf.keras.layers.MaxPooling2D((2, 2)),\n    \n    tf.keras.layers.Conv2D(128, (3, 3), activation='relu'),\n    tf.keras.layers.MaxPooling2D((2, 2)),\n    \n    tf.keras.layers.Conv2D(256, (3, 3), activation='relu'),\n    tf.keras.layers.MaxPooling2D((2, 2)),\n    \n    # Flatten and Dense Layers\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(1024, activation='relu'),\n    tf.keras.layers.Dense(512, activation='relu'),\n    tf.keras.layers.Dense(1)  # Single output for regression\n])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:28.613148Z","iopub.execute_input":"2024-12-18T14:49:28.613506Z","iopub.status.idle":"2024-12-18T14:49:28.956545Z","shell.execute_reply.started":"2024-12-18T14:49:28.613475Z","shell.execute_reply":"2024-12-18T14:49:28.955447Z"}},"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/convolutional/base_conv.py:107: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"}],"execution_count":18},{"cell_type":"code","source":"# Compile the Model\nmodel.compile(\n    optimizer='adam',\n    loss='mse',  # Mean Squared Error for regression\n    metrics=['mae']  # Mean Absolute Error for evaluation\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:28.957918Z","iopub.execute_input":"2024-12-18T14:49:28.958338Z","iopub.status.idle":"2024-12-18T14:49:28.974008Z","shell.execute_reply.started":"2024-12-18T14:49:28.958290Z","shell.execute_reply":"2024-12-18T14:49:28.972833Z"}},"outputs":[],"execution_count":19},{"cell_type":"code","source":"# Summary of the Model\nmodel.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:28.975433Z","iopub.execute_input":"2024-12-18T14:49:28.975819Z","iopub.status.idle":"2024-12-18T14:49:29.004312Z","shell.execute_reply.started":"2024-12-18T14:49:28.975772Z","shell.execute_reply":"2024-12-18T14:49:29.003410Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m119\u001b[0m, \u001b[38;5;34m79\u001b[0m, \u001b[38;5;34m64\u001b[0m)    │         \u001b[38;5;34m2,368\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d (\u001b[38;5;33mMaxPooling2D\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m59\u001b[0m, \u001b[38;5;34m39\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m57\u001b[0m, \u001b[38;5;34m37\u001b[0m, \u001b[38;5;34m128\u001b[0m)    │        \u001b[38;5;34m73,856\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m28\u001b[0m, \u001b[38;5;34m18\u001b[0m, \u001b[38;5;34m128\u001b[0m)    │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_2 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m16\u001b[0m, \u001b[38;5;34m256\u001b[0m)    │       \u001b[38;5;34m295,168\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_2 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m13\u001b[0m, \u001b[38;5;34m8\u001b[0m, \u001b[38;5;34m256\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten (\u001b[38;5;33mFlatten\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m26624\u001b[0m)          │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1024\u001b[0m)           │    \u001b[38;5;34m27,264,000\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)            │       \u001b[38;5;34m524,800\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │           \u001b[38;5;34m513\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">119</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">79</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)    │         <span style=\"color: #00af00; text-decoration-color: #00af00\">2,368</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">59</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">39</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">57</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">37</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">73,856</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">28</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">18</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)    │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">16</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)    │       <span style=\"color: #00af00; text-decoration-color: #00af00\">295,168</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">13</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">8</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26624</span>)          │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1024</span>)           │    <span style=\"color: #00af00; text-decoration-color: #00af00\">27,264,000</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)            │       <span style=\"color: #00af00; text-decoration-color: #00af00\">524,800</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │           <span style=\"color: #00af00; text-decoration-color: #00af00\">513</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m28,160,705\u001b[0m (107.42 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">28,160,705</span> (107.42 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m28,160,705\u001b[0m (107.42 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">28,160,705</span> (107.42 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n</pre>\n"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"# Train the CNN Model\nhistory = model.fit(\n    X_train, y_train,\n    validation_split=0.2,  # Use a portion of the training data for validation\n    epochs=20,             # Adjust epochs as needed\n    batch_size=32,         # Adjust batch size based on your memory constraints\n    verbose=1\n)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T14:49:29.005439Z","iopub.execute_input":"2024-12-18T14:49:29.005787Z","iopub.status.idle":"2024-12-18T15:49:10.540716Z","shell.execute_reply.started":"2024-12-18T14:49:29.005756Z","shell.execute_reply":"2024-12-18T15:49:10.539602Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m176s\u001b[0m 1s/step - loss: 1.9915 - mae: 0.7860 - val_loss: 0.6473 - val_mae: 0.5365\nEpoch 2/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m174s\u001b[0m 1s/step - loss: 0.3872 - mae: 0.4498 - val_loss: 0.4053 - val_mae: 0.4680\nEpoch 3/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m173s\u001b[0m 1s/step - loss: 0.2139 - mae: 0.3474 - val_loss: 0.1983 - val_mae: 0.3275\nEpoch 4/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m174s\u001b[0m 1s/step - loss: 0.1481 - mae: 0.2921 - val_loss: 0.1962 - val_mae: 0.3339\nEpoch 5/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m203s\u001b[0m 1s/step - loss: 0.1413 - mae: 0.2791 - val_loss: 0.1426 - val_mae: 0.2832\nEpoch 6/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m176s\u001b[0m 1s/step - loss: 0.1052 - mae: 0.2504 - val_loss: 0.3107 - val_mae: 0.4308\nEpoch 7/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m177s\u001b[0m 1s/step - loss: 0.1481 - mae: 0.2947 - val_loss: 0.1644 - val_mae: 0.3072\nEpoch 8/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m175s\u001b[0m 1s/step - loss: 0.0940 - mae: 0.2334 - val_loss: 0.1841 - val_mae: 0.3241\nEpoch 9/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m175s\u001b[0m 1s/step - loss: 0.0835 - mae: 0.2217 - val_loss: 0.1286 - val_mae: 0.2728\nEpoch 10/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m175s\u001b[0m 1s/step - loss: 0.0861 - mae: 0.2229 - val_loss: 0.1702 - val_mae: 0.3031\nEpoch 11/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m203s\u001b[0m 1s/step - loss: 0.0669 - mae: 0.1981 - val_loss: 0.1485 - val_mae: 0.2913\nEpoch 12/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m175s\u001b[0m 1s/step - loss: 0.0711 - mae: 0.2037 - val_loss: 0.1330 - val_mae: 0.2718\nEpoch 13/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m175s\u001b[0m 1s/step - loss: 0.0650 - mae: 0.1922 - val_loss: 0.1347 - val_mae: 0.2708\nEpoch 14/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m175s\u001b[0m 1s/step - loss: 0.0565 - mae: 0.1826 - val_loss: 0.1881 - val_mae: 0.3211\nEpoch 15/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m174s\u001b[0m 1s/step - loss: 0.0587 - mae: 0.1767 - val_loss: 0.1459 - val_mae: 0.2940\nEpoch 16/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m175s\u001b[0m 1s/step - loss: 0.0413 - mae: 0.1561 - val_loss: 0.1350 - val_mae: 0.2759\nEpoch 17/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m175s\u001b[0m 1s/step - loss: 0.0372 - mae: 0.1473 - val_loss: 0.1668 - val_mae: 0.2980\nEpoch 18/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m175s\u001b[0m 1s/step - loss: 0.0322 - mae: 0.1347 - val_loss: 0.1947 - val_mae: 0.3218\nEpoch 19/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m173s\u001b[0m 1s/step - loss: 0.0361 - mae: 0.1442 - val_loss: 0.2075 - val_mae: 0.3455\nEpoch 20/20\n\u001b[1m147/147\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m205s\u001b[0m 1s/step - loss: 0.0314 - mae: 0.1325 - val_loss: 0.1567 - val_mae: 0.2956\n","output_type":"stream"}],"execution_count":21},{"cell_type":"markdown","source":"## 6. Evaluate the Model","metadata":{}},{"cell_type":"code","source":"# Evaluate on Test Set\ntest_loss, test_mae = model.evaluate(X_test, y_test, verbose=1)\nprint(\"Test MAE:\", test_mae)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T15:49:10.542745Z","iopub.execute_input":"2024-12-18T15:49:10.543139Z","iopub.status.idle":"2024-12-18T15:49:31.410061Z","shell.execute_reply.started":"2024-12-18T15:49:10.543100Z","shell.execute_reply":"2024-12-18T15:49:31.408125Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 376ms/step - loss: 0.1439 - mae: 0.2731\nTest MAE: 0.2716377079486847\n","output_type":"stream"}],"execution_count":22},{"cell_type":"code","source":"# Predict Wind Magnitude\ny_pred_normalized = model.predict(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T15:49:31.412004Z","iopub.execute_input":"2024-12-18T15:49:31.412868Z","iopub.status.idle":"2024-12-18T15:49:53.613156Z","shell.execute_reply.started":"2024-12-18T15:49:31.412826Z","shell.execute_reply":"2024-12-18T15:49:53.611539Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 459ms/step\n","output_type":"stream"}],"execution_count":23},{"cell_type":"code","source":"# Reverse scaling to get original values\ny_pred = scaler_y.inverse_transform(y_pred_normalized)\ny_actual = scaler_y.inverse_transform(y_test.reshape(-1, 1))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T15:49:53.615632Z","iopub.execute_input":"2024-12-18T15:49:53.616044Z","iopub.status.idle":"2024-12-18T15:49:53.624487Z","shell.execute_reply.started":"2024-12-18T15:49:53.615997Z","shell.execute_reply":"2024-12-18T15:49:53.623279Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"# Display Results\n\nplt.figure(figsize=(10, 6))\nplt.plot(y_actual, label='Actual Wind Magnitude', color='blue')\nplt.plot(y_pred, label='Predicted Wind Magnitude', color='red')\nplt.legend()\nplt.title(\"Wind Magnitude Prediction (CNN Regression)\")\nplt.xlabel(\"Sample\")\nplt.ylabel(\"Wind Magnitude\")\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T15:49:53.625980Z","iopub.execute_input":"2024-12-18T15:49:53.626325Z","iopub.status.idle":"2024-12-18T15:49:54.043219Z","shell.execute_reply.started":"2024-12-18T15:49:53.626293Z","shell.execute_reply":"2024-12-18T15:49:54.042115Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":25},{"cell_type":"code","source":"r2 = r2_score(y_actual,y_pred)\nprint(f\"R-squared value = {r2}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T15:50:55.511740Z","iopub.execute_input":"2024-12-18T15:50:55.512863Z","iopub.status.idle":"2024-12-18T15:50:55.520070Z","shell.execute_reply.started":"2024-12-18T15:50:55.512806Z","shell.execute_reply":"2024-12-18T15:50:55.518966Z"}},"outputs":[{"name":"stdout","text":"R-squared value = 0.8738772565302831\n","output_type":"stream"}],"execution_count":31},{"cell_type":"markdown","source":"## 7. Save the Model in HDF5 Format","metadata":{}},{"cell_type":"code","source":"# Save the entire model (architecture + weights + optimizer state)\nmodel.save('cnn1_wind_model.h5')\n\nprint(\"Model saved as 'cnn1_wind_model.h5'\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T15:49:54.045068Z","iopub.execute_input":"2024-12-18T15:49:54.045502Z","iopub.status.idle":"2024-12-18T15:49:54.938235Z","shell.execute_reply.started":"2024-12-18T15:49:54.045449Z","shell.execute_reply":"2024-12-18T15:49:54.937063Z"}},"outputs":[{"name":"stdout","text":"Model saved as 'cnn1_wind_model.h5'\n","output_type":"stream"}],"execution_count":26},{"cell_type":"code","source":"# Save training history as a file\nimport pickle\nwith open('history.pkl', 'wb') as file:\n    pickle.dump(history.history, file)\nprint(\"Training history saved.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-18T15:49:54.939696Z","iopub.execute_input":"2024-12-18T15:49:54.940022Z","iopub.status.idle":"2024-12-18T15:49:54.946969Z","shell.execute_reply.started":"2024-12-18T15:49:54.939989Z","shell.execute_reply":"2024-12-18T15:49:54.945827Z"}},"outputs":[{"name":"stdout","text":"Training history saved.\n","output_type":"stream"}],"execution_count":27},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}